[{"/home/ghto/Desktop/tech-store/tech-front/src/index.js":"1","/home/ghto/Desktop/tech-store/tech-front/src/reportWebVitals.js":"2","/home/ghto/Desktop/tech-store/tech-front/src/App.js":"3","/home/ghto/Desktop/tech-store/tech-front/src/store.js":"4","/home/ghto/Desktop/tech-store/tech-front/src/components/auth/register.js":"5","/home/ghto/Desktop/tech-store/tech-front/src/components/auth/login.js":"6","/home/ghto/Desktop/tech-store/tech-front/src/redux/actions/authActions.js":"7","/home/ghto/Desktop/tech-store/tech-front/src/components/header/index.js":"8","/home/ghto/Desktop/tech-store/tech-front/src/components/main/index.js":"9","/home/ghto/Desktop/tech-store/tech-front/src/components/cart/index.js":"10","/home/ghto/Desktop/tech-store/tech-front/src/components/admin/index.js":"11","/home/ghto/Desktop/tech-store/tech-front/src/components/product/index.js":"12","/home/ghto/Desktop/tech-store/tech-front/src/components/catalog/index.js":"13","/home/ghto/Desktop/tech-store/tech-front/src/components/admin/add-product/index.js":"14","/home/ghto/Desktop/tech-store/tech-front/src/components/catalog/catalog-link/index.js":"15","/home/ghto/Desktop/tech-store/tech-front/src/components/colors/index.js":"16","/home/ghto/Desktop/tech-store/tech-front/src/components/manufacturer/index.js":"17","/home/ghto/Desktop/tech-store/tech-front/src/components/admin/add-delivery/index.js":"18","/home/ghto/Desktop/tech-store/tech-front/src/components/admin/add-category/index.js":"19","/home/ghto/Desktop/tech-store/tech-front/src/components/routes/admin-route/index.js":"20","/home/ghto/Desktop/tech-store/tech-front/src/redux/reducers/index.js":"21","/home/ghto/Desktop/tech-store/tech-front/src/redux/actions/cartActions.js":"22","/home/ghto/Desktop/tech-store/tech-front/src/redux/constants/index.js":"23","/home/ghto/Desktop/tech-store/tech-front/src/components/infoblock/index.js":"24","/home/ghto/Desktop/tech-store/tech-front/src/components/main/product-item/index.js":"25","/home/ghto/Desktop/tech-store/tech-front/src/components/catalog/filter-params/index.js":"26","/home/ghto/Desktop/tech-store/tech-front/src/components/cart/cart-item/index.js":"27","/home/ghto/Desktop/tech-store/tech-front/src/redux/reducers/authReducer.js":"28","/home/ghto/Desktop/tech-store/tech-front/src/redux/reducers/cartReducer.js":"29","/home/ghto/Desktop/tech-store/tech-front/src/components/orders/orders/index.js":"30","/home/ghto/Desktop/tech-store/tech-front/src/components/orders/orders/order-item/index.js":"31","/home/ghto/Desktop/tech-store/tech-front/src/components/my-carousel/index.js":"32","/home/ghto/Desktop/tech-store/tech-front/src/components/orders/orders/order-item-handled/index.js":"33","/home/ghto/Desktop/tech-store/tech-front/src/components/profile/index.js":"34"},{"size":457,"mtime":1622821832317,"results":"35","hashOfConfig":"36"},{"size":362,"mtime":1622821832317,"results":"37","hashOfConfig":"36"},{"size":2930,"mtime":1622998789775,"results":"38","hashOfConfig":"36"},{"size":233,"mtime":1622821832317,"results":"39","hashOfConfig":"36"},{"size":3589,"mtime":1622876215287,"results":"40","hashOfConfig":"36"},{"size":2352,"mtime":1622821832305,"results":"41","hashOfConfig":"36"},{"size":1932,"mtime":1622821832317,"results":"42","hashOfConfig":"36"},{"size":5992,"mtime":1623002815401,"results":"43","hashOfConfig":"36"},{"size":1064,"mtime":1622839011873,"results":"44","hashOfConfig":"36"},{"size":5327,"mtime":1622995562746,"results":"45","hashOfConfig":"36"},{"size":1616,"mtime":1622827187054,"results":"46","hashOfConfig":"36"},{"size":3256,"mtime":1622990602971,"results":"47","hashOfConfig":"36"},{"size":1378,"mtime":1622833287712,"results":"48","hashOfConfig":"36"},{"size":8026,"mtime":1622994771204,"results":"49","hashOfConfig":"36"},{"size":1907,"mtime":1622869799121,"results":"50","hashOfConfig":"36"},{"size":2414,"mtime":1622991394332,"results":"51","hashOfConfig":"36"},{"size":4032,"mtime":1622991399960,"results":"52","hashOfConfig":"36"},{"size":2548,"mtime":1622991387184,"results":"53","hashOfConfig":"36"},{"size":4236,"mtime":1622991382020,"results":"54","hashOfConfig":"36"},{"size":593,"mtime":1622821832309,"results":"55","hashOfConfig":"36"},{"size":158,"mtime":1622821832317,"results":"56","hashOfConfig":"36"},{"size":958,"mtime":1622991904066,"results":"57","hashOfConfig":"36"},{"size":348,"mtime":1622991876818,"results":"58","hashOfConfig":"36"},{"size":1716,"mtime":1622821832305,"results":"59","hashOfConfig":"36"},{"size":1044,"mtime":1622836963315,"results":"60","hashOfConfig":"36"},{"size":2912,"mtime":1622821832305,"results":"61","hashOfConfig":"36"},{"size":1389,"mtime":1622837055499,"results":"62","hashOfConfig":"36"},{"size":708,"mtime":1622821832317,"results":"63","hashOfConfig":"36"},{"size":3523,"mtime":1622991966894,"results":"64","hashOfConfig":"36"},{"size":1382,"mtime":1622987433974,"results":"65","hashOfConfig":"36"},{"size":2023,"mtime":1622994728056,"results":"66","hashOfConfig":"36"},{"size":883,"mtime":1622832231405,"results":"67","hashOfConfig":"36"},{"size":1381,"mtime":1622994701174,"results":"68","hashOfConfig":"36"},{"size":3678,"mtime":1623007884251,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"1jo6avo",{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"72"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"72"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"72"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"72"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"72"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"72"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"72"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"72"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"72"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"72"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"72"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"72"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"72"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"72"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"72"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"72"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/ghto/Desktop/tech-store/tech-front/src/index.js",[],["155","156"],"/home/ghto/Desktop/tech-store/tech-front/src/reportWebVitals.js",[],"/home/ghto/Desktop/tech-store/tech-front/src/App.js",[],"/home/ghto/Desktop/tech-store/tech-front/src/store.js",["157"],"import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"../src/redux/reducers\";\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nexport default store;\n","/home/ghto/Desktop/tech-store/tech-front/src/components/auth/register.js",["158","159","160","161"],"import React, { useState, useEffect } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { registerUser } from \"../../redux/actions/authActions\";\nimport { Form, FormControl, Button } from \"react-bootstrap\";\n\nimport \"./register.css\";\n\nconst Register = (props) => {\n  const [login, setLogin] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [password2, setPassword2] = useState(\"\");\n  const [errors, setErrors] = useState({email: \"\", password: \"\"});\n\n  useEffect(() => {\n    if (props.auth.isAuthenticated) {\n      props.history.push(\"/\");\n    }\n  }, [errors != {email: \"\", password: \"\"}]);\n\n  const onChangeEmail = (e) => {\n    setEmail(e.target.value);\n  };\n\n  const onChangeLogin = (e) => {\n    setLogin(e.target.value);\n  };\n\n  const onChangePassword = (e) => {\n    setPassword(e.target.value);\n  };\n\n  const onChangePassword2 = (e) => {\n    setPassword2(e.target.value);\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    const newUser = {\n      name: login,\n      email: email,\n      password: password,\n      password2: password2,\n    };\n    props.registerUser(newUser, props.history);\n    props.history.push(\"/\");\n    setErrors(props.errors);\n  };\n\n  return (\n    <Form className=\"register-form\" onSubmit={onSubmit}>\n      <h1>Регистрация</h1>\n      <Form.Row>\n        <Form.Group>\n          <Form.Label>Имя</Form.Label>\n          <FormControl\n            onChange={onChangeLogin}\n            value={login}\n            error={errors.name}\n            id=\"name\"\n            type=\"text\"\n            placeholder=\"Имя\"\n          />\n          <span className=\"text-danger font-weight-bold\">{errors.name}</span>\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Почта</Form.Label>\n          <FormControl\n            onChange={onChangeEmail}\n            value={email}\n            error={errors.email}\n            id=\"email\"\n            type=\"email\"\n            placeholder=\"Почта\"\n          />\n          <span className=\"text-danger font-weight-bold\">{errors.email}</span>\n        </Form.Group>\n      </Form.Row>\n\n      <Form.Row>\n        <Form.Group>\n          <Form.Label>Пароль</Form.Label>\n          <FormControl\n            onChange={onChangePassword}\n            value={password}\n            error={errors.password}\n            id=\"password\"\n            type=\"password\"\n            placeholder=\"Пароль\"\n          />\n          <span className=\"text-danger font-weight-bold\">\n            {errors.password}\n          </span>\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Подтверждение пароля</Form.Label>\n          <FormControl\n            onChange={onChangePassword2}\n            value={password2}\n            error={errors.password2}\n            id=\"password2\"\n            type=\"password\"\n            placeholder=\"Подтверждение пароля\"\n          />\n          <span className=\"text-danger font-weight-bold\">\n            {errors.password2}\n          </span>\n        </Form.Group>\n      </Form.Row>\n      <Button onClick={onSubmit}>Регистрация</Button>\n    </Form>\n  );\n};\n\nRegister.propTypes = {\n  registerUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  errors: state.auth.errors,\n});\nexport default connect(mapStateToProps, { registerUser })(withRouter(Register));\n","/home/ghto/Desktop/tech-store/tech-front/src/components/auth/login.js",["162","163","164"],"import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { loginUser } from \"../../redux/actions/authActions\";\nimport { Form, FormControl, InputGroup, Button } from \"react-bootstrap\";\n\nimport \"./login.css\";\n\nconst Login = (props) => {\n  const [login, setLogin] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errors, setErrors] = useState({email: \"\", password: \"\"});\n\n  useEffect(() => {\n    if (props.auth.isAuthenticated) {\n      props.history.push(\"/profile\");\n    }\n  }, [errors != {email: \"\", password: \"\"}]);\n\n  const onChangeLogin = (e) => {\n    setLogin(e.target.value);\n  };\n\n  const onChangePassword = (e) => {\n    setPassword(e.target.value);\n  };\n\n  const onSubmitForm = (e) => {\n    e.preventDefault();\n    const userData = {\n      email: login,\n      password: password,\n    };\n    props.loginUser(userData);\n    setErrors(props.errors);\n    console.log(props.errors)\n    if (login === \"admin@gmail.com\" && props.auth.isAuthenticated) {\n      props.history.push(\"/admin\");\n    }\n  };\n\n  return (\n    <Form className=\"login-from\" onSubmit={onSubmitForm}>\n      <h1>Вход</h1>\n      <Form.Label>Почта</Form.Label>\n      <InputGroup>\n        <FormControl\n          placehoder=\"Почта\"\n          value={login}\n          onChange={onChangeLogin}\n        />\n        <span className=\"text-danger font-weight-bold\">{errors.email}</span>\n      </InputGroup>\n      <Form.Label>Пароль</Form.Label>\n      <InputGroup>\n        <FormControl\n          placehoder=\"Пароль\"\n          type=\"password\"\n          value={password}\n          onChange={onChangePassword}\n        />\n        <span className=\"text-danger font-weight-bold\">{errors.password}</span>\n      </InputGroup>\n      <Button onClick={onSubmitForm}>Войти</Button>\n      <Button\n        className=\"register-button\"\n        onClick={() => props.history.push(\"/register\")}\n      >\n        Регистрация\n      </Button>\n    </Form>\n  );\n};\n\nLogin.propTypes = {\n  loginUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  errors: state.auth.errors,\n});\nexport default connect(mapStateToProps, { loginUser })(Login);\n","/home/ghto/Desktop/tech-store/tech-front/src/redux/actions/authActions.js",[],"/home/ghto/Desktop/tech-store/tech-front/src/components/header/index.js",["165","166"],"/home/ghto/Desktop/tech-store/tech-front/src/components/main/index.js",[],"/home/ghto/Desktop/tech-store/tech-front/src/components/cart/index.js",["167"],"import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { connect, useDispatch, useSelector } from \"react-redux\";\nimport CartItem from \"./cart-item\";\nimport InputMask from \"react-input-mask\";\nimport { Delete, Minus, Plus, clear } from \"../../redux/actions/cartActions\";\nimport { NotificationManager } from 'react-notifications';\n\nimport \"./cart.css\";\n\nconst Cart = (props) => {\n  const { cart_items, totalCount, totalPrice } = useSelector(\n    (state) => state.cart\n  );\n  const {user} = useSelector(state => state.auth)\n\n  const dispatch = useDispatch();\n  const [address, setAddress] = useState(\"\");\n  const [telephone, setTelephone] = useState(\"\");\n  const [deliveryId, setId] = useState(null);\n  const [deliveries, setDeliveries] = useState([]);\n\n  useEffect(() => {\n    axios.get(\"http://localhost:3000/api/deliveries/\")\n    .then(resposne => {\n      setDeliveries(resposne.data);\n      setId(resposne.data[0].id);\n    })\n    .catch(err => console.log(err))\n  }, [deliveries.length])\n\n  const onClickOrder = () => {\n    let order = {\n      telephone: telephone,\n      address: address,\n      status: false,\n      deliveryId: deliveryId,\n      userId: user.id\n    };\n    if(address.length === 0 || telephone.length === 0){\n      NotificationManager.error('Проверьте данные еще раз', 'Заказ отклонен')\n      return;\n    }\n    axios\n      .post(\"http://localhost:3000/api/add\", order)\n      .then((res) => {\n        setAddress(\"\");\n        setTelephone(\"\");\n        cart_items.map(el => {\n          axios.post(`http://localhost:3000/api/orders/${res.data.id}/add-product/${el.id}`, {count: el.count})\n          .then(res => console.log(res.data))\n          .catch(err => console.log(err))\n        })\n        NotificationManager.success('Заказ принят', 'Успех')\n        dispatch(clear());\n        props.history.push(\"/\");\n      })\n      .catch((err) => {\n        NotificationManager.error('Проверьте данные еще раз', 'Заказ отклонен')\n        console.log(err);\n      });\n  };\n\n  const onPlusClick = (data) => {\n    dispatch(Plus(data));\n  };\n\n  const onMinusClick = (data) => {\n    dispatch(Minus(data));\n  };\n\n  const onRemoveClick = (data) => {\n    dispatch(Delete(data));\n  };\n\n  const onChangeAddress = (e) => {\n    setAddress(e.target.value);\n  };\n\n  const onChangeId = (e) => {\n    console.log(e.target.value);\n    setId(e.target.value);\n  };\n\n  const onChangeTelephone = (e) => {\n    setTelephone(e.target.value);\n  };\n\n  return (\n    <>\n      {cart_items.length === 0 ? (\n        <div className=\"cart-empty\">\n          <h2>Корзина пустая</h2>\n          <p>\n            Вероятней всего, вы не добвили еще товары.\n            <br />\n            Для того, чтобы добавить товары, перейди на главную страницу.\n          </p>\n          <Button\n            onClick={() => props.history.push(\"/\")}\n            className=\"button-back\"\n          >\n            Вернуться назад\n          </Button>\n        </div>\n      ) : (\n        <>\n          <ul className=\"cart-items\">\n            {cart_items.map((el) => (\n              <li>\n                <CartItem\n                  {...el}\n                  onPlus={onPlusClick}\n                  onMinus={onMinusClick}\n                  onRemove={onRemoveClick}\n                />\n              </li>\n            ))}\n          </ul>\n          <div className=\"cart__bottom\">\n            <span>\n              Всего товаров: <b>{totalCount} шт.</b>{\" \"}\n            </span>\n            <span>\n              Сумма заказа: <b>{totalPrice} BYN</b>{\" \"}\n            </span>\n          </div>\n          <Form className=\"order-form\" onSubmit={onClickOrder}>\n            <h2>Оформление заказа</h2>\n            <Form.Group>\n              <Form.Label>Моб. номер телефона</Form.Label>\n              <InputMask\n                className=\"form-control\"\n                mask=\"+375 (99) 999-99-99\"\n                value={telephone}\n                placeholder=\"+375 (99) 99-99-99\"\n                onChange={onChangeTelephone}\n              />\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Адрес доставки</Form.Label>\n              <Form.Control\n                placeholder=\"Введите адрес\"\n                value={address}\n                onChange={onChangeAddress}\n              />\n            </Form.Group>\n            <Form.Label>Способ доставки</Form.Label>\n                <Form.Control\n                  as=\"select\"\n                  value={deliveryId}\n                  onChange={onChangeId}\n                  name=\"deliveryrId\"\n                  id=\"delivery\"\n                  required\n                >\n                  {deliveries.map((el) => (\n                    <option value={el.id}>{el.name}</option>\n                  ))}\n                </Form.Control>\n            <Button onClick={onClickOrder}>Оформить заказ</Button>\n          </Form>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default connect(\n  (state) => ({\n    cart: state.cart,\n  }),\n  (dispatch) => ({})\n)(Cart);\n","/home/ghto/Desktop/tech-store/tech-front/src/components/admin/index.js",["168","169","170","171","172"],"import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport Orders from \"../orders/orders\";\nimport AddProduct from \"../admin/add-product\";\nimport Colors from \"../colors\";\nimport Manufacturers from \"../manufacturer\";\n\nimport axios from \"axios\";\n\nimport \"./admin.css\";\nimport AddDelivery from \"./add-delivery\";\nimport AddCategory from \"./add-category\";\n\nconst Admin = () => {\n  const [colors, setColors] = useState([]);\n  const [manufacturers, setManufacturers] = useState([]);\n  const [deliveries, setDeliveries] = useState([]);\n  const [categories, setCategories] = useState([]);\n\n  useEffect(() => {\n    updateData();\n  }, [colors.length, manufacturers.length, deliveries.length, categories.length]);\n\n  const updateData = () => {\n    axios\n      .get(\"http://localhost:3000/api/colors\")\n      .then((response) => setColors(response.data))\n      .catch((err) => console.log(err));\n    axios\n      .get(\"http://localhost:3000/api/manufacturers\")\n      .then((response) => setManufacturers(response.data))\n      .catch((err) => console.log(err));\n    axios\n      .get(\"http://localhost:3000/api/deliveries\")\n      .then((response) => setDeliveries(response.data))\n      .catch((err) => console.log(err));\n    axios\n      .get(\"http://localhost:3000/api/categories\")\n      .then((response) => setCategories(response.data))\n      .catch((err) => console.log(err));\n    };\n\n  return (\n    <>\n      <h1 className=\"header-admin\">Панель Администратора</h1>\n      <Orders />\n    </>\n  );\n};\n\nexport default connect(\n  (state) => ({}),\n  (dispatch) => ({})\n)(Admin);\n","/home/ghto/Desktop/tech-store/tech-front/src/components/product/index.js",["173","174","175","176"],"import React, { useState, useEffect } from \"react\";\nimport { Card, ListGroup, Button } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport { Add } from \"../../redux/actions/cartActions\";\nimport RemoteImage from 'react-remote-image'\n\nimport \"./product.css\";\n\nconst Product = (props) => {\n  const [data, setData] = useState({});\n  const [color, setColor] = useState(\"\");\n  const [manufacturer, setManufacturer] = useState({name: \"\", country: \"\", proizvod: \"\", importer: \"\"});\n  const [category, setCategory] = useState(\"\");\n\n  useEffect(() => {\n    axios\n      .get(`http://localhost:3000/api/products/${props.match.params.id}`)\n      .then((response) => {\n        setData(response.data);\n        axios\n          .get(\"http://localhost:3000/api/colors/\" + response.data.colorId)\n          .then((response) => setColor(response.data.name))\n          .catch(err => setColor(\"\"))\n        axios\n          .get(\n            \"http://localhost:3000/api/manufacturers/\" +\n            response.data.manufacturerId\n          )\n          .then((response) => setManufacturer(response.data))\n          .catch(err => setManufacturer(\"\"))\n        axios\n          .get(\n            \"http://localhost:3000/api/subcategories/\" +\n            response.data.subcategoryId\n          )\n          .then((response) => setCategory(response.data.name))\n          .catch(err => setCategory(\"\"))\n      })\n      .catch((err) => console.log(err));\n  }, [data != {}]);\n\n  return (\n    <div className=\"card card-show mb-3\">\n      <div className=\"row g-0\">\n        <div className=\"col-md-6\">\n          <Card.Img src={`${data.imageUrl}?auto=compress&cs=tinysrgb&h=350`}\n            className=\"card-show-img\"\n            alt={data.imageUrl} />\n        </div>\n        <div className=\"col-md-6\">\n          <Card.Body>\n            <Card.Title className=\"card-show-title\">{data.name}</Card.Title>\n            <Card.Text className=\"card-show-description\">\n              {data.description}\n            </Card.Text>\n            <ListGroup variant=\"flush\">\n              <ListGroup.Item>Цвет: {color}</ListGroup.Item>\n              <ListGroup.Item>Бренд: {manufacturer.name}</ListGroup.Item>\n              <ListGroup.Item>Страна: {manufacturer.country}</ListGroup.Item>\n              <ListGroup.Item>Производитель: {manufacturer.proizvod}</ListGroup.Item>\n              <ListGroup.Item>Импортер: {manufacturer.importer}</ListGroup.Item>\n              <ListGroup.Item>Категория: {category}</ListGroup.Item>\n              <ListGroup.Item>Ширина: {data.width} см.</ListGroup.Item>\n              <ListGroup.Item>Высота: {data.height} см.</ListGroup.Item>\n            </ListGroup>\n            <Card.Text className=\"price\">{data.price} BYN</Card.Text>\n            <Button\n              className=\"card-button\"\n              onClick={() => props.AddToCart({ id: data.id, name: data.name, price: data.price, count: 1 })}\n            >\n              Добавить\n            </Button>\n          </Card.Body>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default connect(\n  (state) => ({\n    cart: state.cart,\n  }),\n  (dispatch) => ({\n    AddToCart: (el) => dispatch(Add(el)),\n  })\n)(Product);","/home/ghto/Desktop/tech-store/tech-front/src/components/catalog/index.js",[],"/home/ghto/Desktop/tech-store/tech-front/src/components/admin/add-product/index.js",["177","178","179","180","181"],"import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { FormControl, Button, Form, Row, Table } from \"react-bootstrap\";\nimport { NotificationManager } from 'react-notifications';\n\nimport \"./add-product.css\";\n\nconst AddProduct = () => {\n  const [colors, setColors] = useState([]);\n  const [manufacturers, setManufacturers] = useState([]);\n  const [subcategories, setCategories] = useState([]);\n\n  useEffect(() => {\n    updateData();\n  }, [colors.length, manufacturers.length, subcategories.length]);\n\n  const addEmpty = (arr) => {\n    arr.unshift({ id: 0, name: \"\" })\n    return arr;\n  }\n\n  const updateData = () => {\n    axios\n      .get(\"http://localhost:3000/api/colors\")\n      .then((response) => setColors(addEmpty(response.data)))\n      .catch((err) => console.log(err));\n    axios\n      .get(\"http://localhost:3000/api/manufacturers\")\n      .then((response) => setManufacturers(addEmpty(response.data)))\n      .catch((err) => console.log(err));\n    axios\n      .get(\"http://localhost:3000/api/subcategories\")\n      .then((response) => setCategories(addEmpty(response.data)))\n      .catch((err) => console.log(err));\n  };\n\n  const [product, setProduct] = useState({\n    name: \"\",\n    imageUrl: \"\",\n    description: \"\",\n    price: 0,\n    width: 0,\n    height: 0,\n    colorId: colors[0] === undefined ? 1 : colors[0].id,\n    manufacturerId: manufacturers[0] === undefined ? 1 : manufacturers[0].id,\n    subcategoryId: subcategories[0] === undefined ? 1 : subcategories[0].id,\n  });\n\n  const onAddClick = (e) => {\n    e.preventDefault();\n    axios\n      .post(\"http://localhost:3000/api/products/add\", product)\n      .then((res) => {\n        NotificationManager.success('Продукт был успешно добавлен', \"Успех\")\n        setProduct({\n          name: \"\",\n          description: \"\",\n          imageUrl: \"\",\n          price: 0,\n          width: 0,\n          height: 0,\n          colorId: \"\",\n          manufacturerId: \"\",\n          subcategoryId: \"\"\n        });\n      })\n      .catch((err) => {\n        NotificationManager.error('Проверьте вводимые данные', \"Ошибка\")\n      });\n  };\n\n  const onChange = (e) => {\n    const { name, value } = e.target;\n    switch (name) {\n      case \"price\": {\n        if (value < 0) {\n          return;\n        } else {\n          setProduct({ ...product, [name]: value });\n        }\n      }\n      case \"height\": {\n        if (value < 0) {\n          return;\n        } else {\n          setProduct({ ...product, [name]: value });\n        }\n      }\n      case \"width\": {\n        if (value < 0) {\n          return;\n        } else {\n          setProduct({ ...product, [name]: value });\n        }\n      }\n      default: {\n        setProduct({ ...product, [name]: value });\n      }\n    }\n  };\n\n  return (\n    <>\n      <section className=\"contact_form py-5\">\n        <div className=\"container\">\n          <div className=\"heading\"></div>\n          <Form className=\"form-add\" noValidate onSubmit={onAddClick}>\n            <h1 className=\"header\">\n              <span>Добавить</span> продукт\n            </h1>\n            <Row>\n              <Form.Group>\n                <Form.Label>Наименование</Form.Label>\n                <FormControl\n                  type=\"text\"\n                  value={product.name}\n                  onChange={onChange}\n                  className=\"name\"\n                  name=\"name\"\n                  id=\"name\"\n                  placeholder=\"Название\"\n                  required\n                />\n              </Form.Group>\n              <Form.Group>\n                <Form.Label>Ссылка на картинку</Form.Label>\n                <FormControl\n                  type=\"text\"\n                  value={product.imageUrl}\n                  onChange={onChange}\n                  className=\"name\"\n                  name=\"imageUrl\"\n                  placeholder=\"Картинка\"\n                  required\n                />\n              </Form.Group>\n              <Form.Group>\n                <Form.Label>Цвет</Form.Label>\n                <FormControl\n                  as=\"select\"\n                  value={product.colorId}\n                  onChange={onChange}\n                  className=\"form-select\"\n                  name=\"colorId\"\n                  id=\"color\"\n                  required\n                >\n                  {colors.map((el) => (\n                    <option value={el.id}>{el.name}</option>\n                  ))}\n                </FormControl>\n              </Form.Group>\n            </Row>\n            <Row>\n              <Form.Group>\n                <Form.Label>Цена (BYN)</Form.Label>\n                <FormControl\n                  type=\"number\"\n                  value={product.price}\n                  onChange={onChange}\n                  className=\"number\"\n                  name=\"price\"\n                  id=\"price\"\n                  placeholder=\"цена\"\n                  min=\"1\"\n                  required\n                />\n              </Form.Group>\n              <Form.Group>\n                <Form.Label>Описание</Form.Label>\n                <FormControl\n                  placeholder=\"Описание\"\n                  value={product.description}\n                  onChange={onChange}\n                  name=\"description\"\n                  id=\"description\"\n                  required\n                  as=\"textarea\"\n                  rows={3}\n                  defaultValue={\"\"}\n                />\n              </Form.Group>\n              <Form.Group>\n                <Form.Label>Производитель</Form.Label>\n                <FormControl\n                  as=\"select\"\n                  value={product.manufacturerId}\n                  onChange={onChange}\n                  className=\"form-select\"\n                  name=\"manufacturerId\"\n                  id=\"manufacturer\"\n                  required\n                >\n                  {manufacturers.map((el) => (\n                    <option value={el.id}>{el.name}</option>\n                  ))}\n                </FormControl>\n              </Form.Group>\n            </Row>\n            <Row>\n              <Form.Group>\n                <Form.Label>Категория товара</Form.Label>\n                <FormControl\n                  as=\"select\"\n                  value={product.subcategoryId}\n                  onChange={onChange}\n                  className=\"form-select\"\n                  name=\"subcategoryId\"\n                  id=\"category\"\n                  required\n                >\n                  {subcategories.map((el) => (\n                    <option value={el.id}>{el.name}</option>\n                  ))}\n                </FormControl>\n              </Form.Group>\n              <Form.Group>\n                <Form.Label>Ширина (см.)</Form.Label>\n                <FormControl\n                  type=\"number\"\n                  value={product.width}\n                  onChange={onChange}\n                  className=\"number\"\n                  name=\"width\"\n                  id=\"width\"\n                  placeholder=\"ширина\"\n                  min=\"1\"\n                  required\n                />\n              </Form.Group>\n              <Form.Group>\n                <Form.Label>Высота (см.)</Form.Label>\n                <FormControl\n                  type=\"number\"\n                  value={product.height}\n                  onChange={onChange}\n                  className=\"number\"\n                  name=\"height\"\n                  id=\"height\"\n                  placeholder=\"высота\"\n                  min=\"1\"\n                  required\n                />\n              </Form.Group>\n            </Row>\n            <div className=\"input-w3ls\">\n              <Button type=\"submit\" className=\"submit-button\">\n                Подтвердить\n              </Button>\n            </div>\n          </Form>\n        </div>\n      </section>\n    </>\n  );\n};\n\nexport default AddProduct;\n","/home/ghto/Desktop/tech-store/tech-front/src/components/catalog/catalog-link/index.js",["182","183"],"import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { Add } from \"../../../redux/actions/cartActions\";\nimport ProductItem from \"../../main/product-item\";\nimport FilterParams from \"../filter-params\";\n\nimport \"../../main/main.css\";\nimport axios from \"axios\";\n\nconst CatalogLink = (props) => {\n  const [products, setProducts] = useState([]);\n  const [color, setColor] = useState(\"\");\n  const [manufacturer, setManufacturer] = useState(\"\");\n  const [category, setCategory] = useState({id: 0, name: \"\"});\n  const [name, setName] = useState(\"\");\n\n  useEffect(() => {\n    axios\n      .get(\"http://localhost:3000/api/products\")\n      .then((response) => setProducts(response.data));\n    axios.get(\"http://localhost:3000/api/subcategories/\"+props.match.params.id)\n    .then(response => setCategory(response.data))\n    .catch(err => console.log(err))\n  }, [products.length, color.length, manufacturer.length]);\n\n  return (\n    <div className=\"main-block\">\n      <h1>{category.name}</h1>\n      <FilterParams\n        name={name}\n        setName={setName}\n        color={color}\n        manufacturer={manufacturer}\n        setColor={setColor}\n        setManufacturer={setManufacturer}\n      />\n      <ul className=\"products\">\n        {products\n          .filter(el => el.subcategoryId.toString() == category.id)\n          .filter(el => el.name.includes(name))\n          .filter(\n            (el) =>\n              el.manufacturerId.toString().includes(manufacturer) &&\n              el.colorId.toString().includes(color)\n          )\n          .map((el) => (\n            <li>\n              <ProductItem {...el} AddToCart={props.AddToCart} />\n            </li>\n          ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default connect(\n  (state) => ({\n    cart: state.cart,\n  }),\n  (dispatch) => ({\n    AddToCart: (el) => dispatch(Add(el)),\n  })\n)(CatalogLink);\n","/home/ghto/Desktop/tech-store/tech-front/src/components/colors/index.js",[],"/home/ghto/Desktop/tech-store/tech-front/src/components/manufacturer/index.js",["184"],"import axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport { Form, Table, Row, Col } from \"react-bootstrap\";\nimport { Button } from \"react-bootstrap\";\nimport { NotificationManager } from 'react-notifications';\n\nimport \"./manufacturers.css\";\n\nconst Manufacturers = () => {\n  const [manufacturers, setManufacturers] = useState([]);\n\n  useEffect(() => {\n    updateData();\n  }, [manufacturers.length]);\n\n  const updateData = () => {\n    axios\n      .get(\"http://localhost:3000/api/manufacturers\")\n      .then((response) => setManufacturers(response.data))\n      .catch((err) => console.log(err));\n  };\n  const [manufacturer, setManufacturer] = useState({\n    name: \"\",\n    country: \"\",\n    importer: \"\",\n    proizvod: \"\",\n  });\n\n  const addNew = () => {\n    axios\n      .post(\"http://localhost:3000/api/manufacturers/add\", manufacturer)\n      .then((response) => {\n        NotificationManager.success('Производитель был успешно добавлен', \"Успех\")\n        updateData();\n        setManufacturer(\"\");\n      })\n      .catch((err) => NotificationManager.error('Проверьте вводимые данные', \"Ошибка\")\n      );\n  };\n\n  const onChangeManufacturer = (e) => {\n    setManufacturer({ ...manufacturer, [e.target.name]: e.target.value });\n  };\n\n  const onDelete = (id) => {\n    axios\n      .delete(\"http://localhost:3000/api/manufacturers/\" + id)\n      .then((reposnse) => updateData())\n      .catch((err) => updateData());\n  };\n\n  return (\n    <>\n      <hr />\n      <Form className=\"form-add\" onSubmit={addNew}>\n        <h1 className=\"header\">Добавление производителей</h1>\n        <Row>\n          <Form.Group>\n            <Form.Label>Название</Form.Label>\n            <Form.Control\n              placheolder=\"Введите название компании\"\n              value={manufacturer.name}\n              onChange={onChangeManufacturer}\n              name=\"name\"\n            />\n          </Form.Group>\n\n          <Form.Group>\n            <Form.Label>Страна</Form.Label>\n            <Form.Control\n              placheolder=\"Введите страну\"\n              value={manufacturer.country}\n              onChange={onChangeManufacturer}\n              name=\"country\"\n            />\n          </Form.Group>\n        </Row>\n        <Row>\n          <Form.Group>\n            <Form.Label>Производитель</Form.Label>\n            <Form.Control\n              placheolder=\"Введите производителя\"\n              value={manufacturer.proizvod}\n              onChange={onChangeManufacturer}\n              name=\"proizvod\"\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Импортер</Form.Label>\n            <Form.Control\n              placheolder=\"Введите импортера\"\n              value={manufacturer.importer}\n              onChange={onChangeManufacturer}\n              name=\"importer\"\n            />\n          </Form.Group>\n        </Row>\n        <Button className=\"submit-button\" onClick={addNew}>\n          Добавить\n        </Button>\n      </Form>\n      <Table className=\"colors-table\">\n        <thead>\n          <tr>\n            <th>Название</th>\n            <th>Страна</th>\n            <th>Производитель</th>\n            <th>Импортер</th>\n            <th>Удаление</th>\n          </tr>\n        </thead>\n        <tbody>\n          {manufacturers.map((el) => (\n            <tr>\n              <td>{el.name}</td>\n              <td>{el.country}</td>\n              <td>{el.proizvod}</td>\n              <td>{el.importer}</td>\n              <td>\n                <Button\n                  className=\"submit-button\"\n                  onClick={() => onDelete(el.id)}\n                >\n                  Удалить\n                </Button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n      <hr />\n    </>\n  );\n};\n\nexport default Manufacturers;\n","/home/ghto/Desktop/tech-store/tech-front/src/components/admin/add-delivery/index.js",[],"/home/ghto/Desktop/tech-store/tech-front/src/components/admin/add-category/index.js",["185"],"import axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport { Form, Table } from \"react-bootstrap\";\nimport { Button } from \"react-bootstrap\";\nimport { NotificationManager } from 'react-notifications';\n\nimport \"./add-category.css\";\n\nconst AddCategory = () => {\n  const [categories, setCategories] = useState([]);\n\n  useEffect(() => {\n    updateData();\n  }, [categories.length]);\n\n  const updateData = () => {\n    axios\n      .get(\"http://localhost:3000/api/categories\")\n      .then((response) => setCategories(addEmpty(response.data)))\n      .catch((err) => console.log(err));\n  };\n  const [category, setCategory] = useState(\"\");\n  const [subCategory, setSubCategory] = useState({ name: \"\", categoryId: categories[0] === undefined ? 1 : categories[0].id })\n\n  const addNew = () => {\n    axios\n      .post(\"http://localhost:3000/api/categories/add\", { name: category })\n      .then((response) => {\n        NotificationManager.success('Категория была успешно добавлена', \"Успех\")\n        updateData();\n        setCategory(\"\");\n      })\n      .catch((err) => NotificationManager.error('Проверьте вводимые данные', \"Ошибка\"));\n  };\n  \n  const addEmpty = (arr) => {\n    arr.unshift({id: 0, name: \"\"})\n    return arr;\n  }\n\n  const addNewSub = () => {\n    axios\n      .post(\"http://localhost:3000/api/subcategories/add\", subCategory)\n      .then((response) => {\n        updateData();\n        setSubCategory({ name: \"\", categoryId: categories[0] === undefined ? 1 : categories[0].id });\n      })\n      .catch((err) => console.log(err));\n  };\n\n  const onChangeSubCategory = (e) => {\n    setSubCategory({...subCategory, [e.target.name]: e.target.value });\n  };\n\n  const onChangeCategory = (e) => {\n    setCategory(e.target.value);\n  };\n\n  const onDelete = (id) => {\n    axios\n      .delete(\"http://localhost:3000/api/categories/\" + id)\n      .then((reposnse) => updateData())\n      .catch((err) => updateData());\n  };\n\n  return (\n    <>\n      <hr />\n      <Form className=\"form-add\" onSubmit={addNew}>\n        <h1 className=\"header\">Добавление категории товаров</h1>\n        <Form.Group>\n          <Form.Label>Название</Form.Label>\n          <Form.Control\n            placheolder=\"Введите название категории\"\n            value={category}\n            onChange={onChangeCategory}\n          />\n        </Form.Group>\n        <Button className=\"submit-button\" onClick={addNew}>\n          Добавить\n        </Button>\n      </Form>\n      <Table className=\"colors-table\">\n        <thead>\n          <tr>\n            <th>Название</th>\n            <th>Удаление</th>\n          </tr>\n        </thead>\n        <tbody>\n          {categories.map((el) => (\n            <tr>\n              <td>{el.name}</td>\n              <td>\n                <Button\n                  className=\"submit-button\"\n                  onClick={() => onDelete(el.id)}\n                >\n                  Удалить\n                </Button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n      <hr />\n      <Form className=\"form-add\" onSubmit={addNewSub}>\n        <h1 className=\"header\">Добавление подкатегорию товара</h1>\n        <Form.Group>\n          <Form.Label>Название</Form.Label>\n          <Form.Control\n            placheolder=\"Введите название подкатегории\"\n            value={subCategory.name}\n            onChange={onChangeSubCategory}\n            name=\"name\"\n          />\n        </Form.Group>\n        <Form.Group>\n          <Form.Control\n            as=\"select\"\n            value={subCategory.categoryId}\n            onChange={onChangeSubCategory}\n            className=\"form-select\"\n            name=\"categoryId\"\n            id=\"subcategory\"\n            required\n          >\n            {categories.map((el) => (\n              <option value={el.id}>{el.name}</option>\n            ))}\n          </Form.Control>\n        </Form.Group>\n        <Button className=\"submit-button\" onClick={addNewSub}>\n          Добавить\n        </Button>\n      </Form>\n    </>\n  );\n};\n\nexport default AddCategory;\n","/home/ghto/Desktop/tech-store/tech-front/src/components/routes/admin-route/index.js",[],"/home/ghto/Desktop/tech-store/tech-front/src/redux/reducers/index.js",[],"/home/ghto/Desktop/tech-store/tech-front/src/redux/actions/cartActions.js",[],"/home/ghto/Desktop/tech-store/tech-front/src/redux/constants/index.js",[],"/home/ghto/Desktop/tech-store/tech-front/src/components/infoblock/index.js",[],"/home/ghto/Desktop/tech-store/tech-front/src/components/main/product-item/index.js",[],"/home/ghto/Desktop/tech-store/tech-front/src/components/catalog/filter-params/index.js",["186"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Form, FormControl, Row, Col } from \"react-bootstrap\";\n\nimport \"./filter-params.css\";\n\nconst FilterParams = (props) => {\n  const [colors, setColors] = useState([]);\n  const [manufacturers, setManufacturers] = useState([]);\n  const { name, setName, color, manufacturer, setColor, setManufacturer } =\n    props;\n\n  useEffect(() => {\n    updateData();\n  }, [colors.length, manufacturers.length]);\n\n  const updateData = () => {\n    axios\n      .get(\"http://localhost:3000/api/colors\")\n      .then((response) => {\n        response.data.unshift({name: \"\"})\n        setColors(response.data);\n        setColor(colors[0].id.toString());\n      })\n      .catch((err) => console.log(err));\n    axios\n      .get(\"http://localhost:3000/api/manufacturers\")\n      .then((response) => {\n        response.data.unshift({name: \"\"})\n        setManufacturers(response.data);\n        setManufacturer(manufacturers[0].id.toString());\n      })\n      .catch((err) => console.log(err));\n  };\n\n  const onChange = (e) => {\n    switch (e.target.name) {\n      case \"color\":\n        setColor(e.target.value);\n        break;\n      case \"manufacturer\":\n        setManufacturer(e.target.value);\n        break;\n      case \"name\":\n        setName(e.target.value);\n        break;\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <Form className=\"filter-form\">\n      <Row>\n        <Col>\n          <Form.Group>\n            <Form.Label>Название</Form.Label>\n            <FormControl\n              type=\"text\"\n              value={name}\n              onChange={onChange}\n              className=\"form-select\"\n              name=\"name\"\n              id=\"name\"\n              required\n            />\n          </Form.Group>\n        </Col>\n        <Col>\n          <Form.Group>\n            <Form.Label>Цвет</Form.Label>\n            <FormControl\n              as=\"select\"\n              value={color}\n              onChange={onChange}\n              className=\"form-select\"\n              name=\"color\"\n              id=\"color\"\n              required\n            >\n              {colors.map((el) => (\n                <option value={el.id}>{el.name}</option>\n              ))}\n            </FormControl>\n          </Form.Group>\n        </Col>\n        <Col>\n          <Form.Group>\n            <Form.Label>Производитель</Form.Label>\n            <FormControl\n              as=\"select\"\n              value={manufacturer}\n              onChange={onChange}\n              className=\"form-select\"\n              name=\"manufacturer\"\n              id=\"manufacturer\"\n              required\n            >\n              {manufacturers.map((el) => (\n                <option value={el.id}>{el.name}</option>\n              ))}\n            </FormControl>\n          </Form.Group>\n        </Col>\n      </Row>\n    </Form>\n  );\n};\n\nexport default FilterParams;\n","/home/ghto/Desktop/tech-store/tech-front/src/components/cart/cart-item/index.js",["187","188"],"import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nimport \"./cart-item.css\";\nimport { DashCircle, PlusCircle, XCircle } from \"react-bootstrap-icons\";\n\nconst CartItem = ({ id, count, onPlus, onMinus, onRemove }) => {\n  const [data, setData] = useState({\n    id: id,\n    name: \"\",\n    imageUrl: \"\",\n    price: null,\n    count: null,\n  });\n\n  useEffect(() => {\n    axios.get(\"http://localhost:3000/api/products/\" + id).then((response) => {\n      setData({ ...response.data, count: count });\n    });\n  }, [data.name.length != 0, count, id]);\n\n  const onPlusClick = () => {\n    onPlus(data);\n  };\n\n  const onMinusClick = () => {\n    onMinus(data);\n  };\n\n  const onRemoveClick = () => {\n    onRemove(data);\n  };\n\n  return (\n    <div className=\"cart__item\">\n      <div className=\"cart__item-img\">\n        <img className=\"pizza-block__image\" src={`${data.imageUrl}?auto=compress&cs=tinysrgb&h=350`} alt=\"product\" />\n      </div>\n      <div className=\"cart__item-info\">\n        <h3>{data.name}</h3>\n        <p>\n          {data.price} BYN, {data.count} шт.\n        </p>\n      </div>\n      <PlusCircle className=\"control-button\" onClick={onPlusClick} size={25} />\n      <DashCircle className=\"control-button\" onClick={onMinusClick} size={25} />\n      <XCircle className=\"control-button\" onClick={onRemoveClick} size={25} />\n    </div>\n  );\n};\n\nexport default CartItem;\n","/home/ghto/Desktop/tech-store/tech-front/src/redux/reducers/authReducer.js",["189"],"import { GET_ERRORS, SET_CURRENT_USER, USER_LOADING } from \"../constants\";\nimport isEmpty from \"is-empty\";\n\nconst initialState = {\n  isAuthenticated: false,\n  user: {},\n  errors: { email: \"\", password: \"\" },\n  loading: false,\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SET_CURRENT_USER:\n      return {\n        ...state,\n        isAuthenticated: !isEmpty(action.payload),\n        user: action.payload,\n      };\n    case USER_LOADING:\n      return {\n        ...state,\n        loading: true,\n      };\n    case GET_ERRORS:\n      return {\n        ...state,\n        errors: { ...state.errors, ...action.payload.data },\n      };\n    default:\n      return state;\n  }\n};\n","/home/ghto/Desktop/tech-store/tech-front/src/redux/reducers/cartReducer.js",["190"],"import {\n  ADD_TO_CART,\n  DELETE_FROM_CART,\n  MINUS_ITEM,\n  PLUS_ITEM,\n  CLEAR_CART\n} from \"../constants\";\n\nconst initialState = {\n  cart_items: [],\n  totalPrice: 0,\n  totalCount: 0,\n};\n\nconst getTotalPrice = (arr) =>\n  arr.reduce((sum, obj) => obj.price * obj.count + sum, 0);\n\nconst getTotalCount = (arr) =>\n  arr.reduce((sum, obj) => obj.count + sum, 0);\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_TO_CART: {\n      const item = state.cart_items.find((el) => el.id === action.data.id);\n      const index = state.cart_items.findIndex(\n        (el) => el.id === action.data.id\n      );\n\n      const newItem = !item\n        ? { id: action.data.id, ...action.data, count: action.data.count }\n        : {\n          ...state.cart_items[index],\n          count: state.cart_items[index].count + 1,\n        };\n\n      const newItems = !item\n        ? [...state.cart_items, newItem]\n        : state.cart_items.map((el) => {\n          return el.id === newItem.id ? { ...el, count: newItem.count } : el;\n        });\n\n      const totalPrice = getTotalPrice(newItems);\n      const totalCount = getTotalCount(newItems)\n\n      return {\n        ...state,\n        cart_items: newItems,\n        totalPrice: totalPrice,\n        totalCount: totalCount,\n      };\n    }\n    case PLUS_ITEM: {\n      const index = state.cart_items.findIndex(\n        (el) => el.id === action.data.id\n      );\n      const previousCount = state.cart_items[index].count;\n\n      const newItem = {\n        ...state.cart_items[index],\n        count: previousCount + 1,\n      };\n\n      const newItems = state.cart_items.map((el) => {\n        return el.id === newItem.id ? { ...el, count: newItem.count } : el;\n      });\n      const totalPrice = getTotalPrice(newItems);\n      const totalCount = getTotalCount(newItems)\n\n      return { ...state, cart_items: newItems, totalPrice: totalPrice, totalCount: totalCount };\n    }\n    case MINUS_ITEM: {\n      const index = state.cart_items.findIndex(\n        (el) => el.id === action.data.id\n      );\n      const previousCount = state.cart_items[index].count;\n\n      if (previousCount === 1) {\n        state.cart_items.splice(index, 1);\n\n        const totalPrice = getTotalPrice(state.cart_items);\n\n        return {\n          ...state,\n          items: state.cart_items,\n          totalCount: state.cart_items.length,\n          totalPrice: totalPrice,\n        };\n      } else {\n        const newItem = {\n          ...state.cart_items[index],\n          count: previousCount - 1,\n        };\n\n        const newItems = state.cart_items.map((el) => {\n          return el.id === newItem.id ? { ...el, count: newItem.count } : el;\n        });\n\n        const totalPrice = getTotalPrice(newItems);\n        const totalCount = getTotalCount(newItems)\n\n        return { ...state, cart_items: newItems, totalPrice: totalPrice, totalCount: totalCount };\n      }\n    }\n\n    case DELETE_FROM_CART: {\n      const index = state.cart_items.findIndex(\n        (el) => el.id === action.data.id\n      );\n      const newItems = [...state.cart_items];\n      newItems.splice(index, 1);\n      const totalPrice = getTotalPrice(newItems);\n      const totalCount = getTotalCount(newItems)\n\n      return {\n        ...state,\n        cart_items: newItems,\n        totalPrice: totalPrice,\n        totalCount: totalCount\n      };\n    }\n    case CLEAR_CART: {\n      return {\n        ...state,\n        cart_items: [],\n        totalPrice: 0,\n        totalCount: 0\n      }\n    }\n    default:\n      return state;\n  }\n};\n","/home/ghto/Desktop/tech-store/tech-front/src/components/orders/orders/index.js",[],"/home/ghto/Desktop/tech-store/tech-front/src/components/orders/orders/order-item/index.js",["191","192","193"],"import React, {useEffect, useState} from \"react\";\nimport { Card, ListGroup, Button } from \"react-bootstrap\";\nimport axios from 'axios'\nimport \"./order-item.css\";\n\nconst OrderItem = ({ id, telephone, address, status, deliveryId, products, updateData }) => {\n  const [delivery, setDelivery] = useState({name: \"\"})\n\n  const setStatus = () => {\n    axios\n    .put(\"http://localhost:3000/api/update/\"+id, {status: !status})\n    .then((response) => updateData())\n    .catch(err => console.log(err))\n  }\n\n  useEffect(() => {\n    axios\n      .get(\"http://localhost:3000/api/deliveries/\"+deliveryId)\n      .then((response) => {\n        if(response.data) {\n          setDelivery(response.data)\n        }\n        else {\n          setDelivery({name: \"\"})\n        }\n      })\n      .catch(err => console.log(err))\n  }, [delivery.name.length != 0]);\n\n  const totalPrice = (arr) => {\n    return arr.reduce((sum, el) => sum + el.price * el.orderProduct.count, 0)\n  }\n\n  const totalCount = (arr) => {\n    return arr.reduce((sum, el) => sum + el.orderProduct.count, 0)\n  }\n\n  return (\n    <Card className=\"order-card\">\n      <Card.Title className=\"order-card-title\">\n        <h2>Номер: {id}</h2>\n        <h6 className=\"telephone\">{telephone}</h6>\n        <h6 className=\"address\">{address}</h6>\n        <h6 className=\"address\">{delivery.name}</h6>\n      </Card.Title>\n      <Card.Body>\n        <ListGroup variant=\"flush\">\n          {\n            products.map(el => (\n              <ListGroup.Item>{el.name} {el.orderProduct.count}шт. {el.price * el.orderProduct.count} BYN</ListGroup.Item>\n            ))\n          }\n        </ListGroup>\n        <Card.Text>Кол-во: {totalCount(products)} шт.</Card.Text>\n        <Card.Text>Сумма: {totalPrice(products)} BYN</Card.Text>\n        <Button type=\"submit\" onClick={setStatus} className=\"submit-button\">\n          {\n            status ? \"Обработан\" : \"Не обработан\"\n          }\n        </Button>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default OrderItem;\n","/home/ghto/Desktop/tech-store/tech-front/src/components/my-carousel/index.js",[],"/home/ghto/Desktop/tech-store/tech-front/src/components/orders/orders/order-item-handled/index.js",["194","195"],"import React, {useEffect, useState} from \"react\";\nimport { Card, ListGroup, Button } from \"react-bootstrap\";\nimport axios from 'axios'\nimport \"./order-item-handled.css\";\n\nconst OrderItemHandled = ({ id, telephone, address, status, products, updateData }) => {\n\n  const setStatus = () => {\n    axios\n    .put(\"http://localhost:3000/api/update/\"+id, {status: !status})\n    .then((response) => updateData())\n    .catch(err => console.log(err))\n  }\n\n  const totalPrice = () => {\n    return products.reduce((sum, el) => sum + el.price * el.orderProduct.count, 0)\n  }\n\n  const totalCount = () => {\n    return products.reduce((sum, el) => sum + el.orderProduct.count, 0)\n  }\n\n  return (\n    <Card className=\"order-card\">\n      <Card.Title className=\"order-card-title\">\n        <h2>Номер: {id}</h2>\n        <h6 className=\"telephone\">{telephone}</h6>\n        <h6 className=\"address\">{address}</h6>\n      </Card.Title>\n      <Card.Body>\n        <ListGroup variant=\"flush\">\n            <ListGroup.Item>{totalCount()} шт.</ListGroup.Item>\n            <ListGroup.Item>{totalPrice()} BYN</ListGroup.Item>\n        </ListGroup>\n        <Button type=\"submit\" onClick={setStatus} className=\"submit-button\">\n          {\n            status ? \"Обработан\" : \"Не обработан\"\n          }\n        </Button>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default OrderItemHandled;\n","/home/ghto/Desktop/tech-store/tech-front/src/components/profile/index.js",["196"],{"ruleId":"197","replacedBy":"198"},{"ruleId":"199","replacedBy":"200"},{"ruleId":"201","severity":1,"message":"202","line":1,"column":40,"nodeType":"203","messageId":"204","endLine":1,"endColumn":47},{"ruleId":"201","severity":1,"message":"205","line":2,"column":10,"nodeType":"203","messageId":"204","endLine":2,"endColumn":14},{"ruleId":"206","severity":1,"message":"207","line":21,"column":6,"nodeType":"208","endLine":21,"endColumn":43,"suggestions":"209"},{"ruleId":"206","severity":1,"message":"210","line":21,"column":7,"nodeType":"211","endLine":21,"endColumn":42},{"ruleId":"212","severity":1,"message":"213","line":21,"column":14,"nodeType":"211","messageId":"214","endLine":21,"endColumn":16},{"ruleId":"206","severity":1,"message":"207","line":19,"column":6,"nodeType":"208","endLine":19,"endColumn":43,"suggestions":"215"},{"ruleId":"206","severity":1,"message":"210","line":19,"column":7,"nodeType":"211","endLine":19,"endColumn":42},{"ruleId":"212","severity":1,"message":"213","line":19,"column":14,"nodeType":"211","messageId":"214","endLine":19,"endColumn":16},{"ruleId":"201","severity":1,"message":"216","line":1,"column":17,"nodeType":"203","messageId":"204","endLine":1,"endColumn":26},{"ruleId":"217","severity":1,"message":"218","line":153,"column":19,"nodeType":"219","endLine":159,"endColumn":20},{"ruleId":"220","severity":1,"message":"221","line":50,"column":27,"nodeType":"222","messageId":"223","endLine":50,"endColumn":29},{"ruleId":"201","severity":1,"message":"224","line":4,"column":8,"nodeType":"203","messageId":"204","endLine":4,"endColumn":18},{"ruleId":"201","severity":1,"message":"225","line":5,"column":8,"nodeType":"203","messageId":"204","endLine":5,"endColumn":14},{"ruleId":"201","severity":1,"message":"226","line":6,"column":8,"nodeType":"203","messageId":"204","endLine":6,"endColumn":21},{"ruleId":"201","severity":1,"message":"227","line":11,"column":8,"nodeType":"203","messageId":"204","endLine":11,"endColumn":19},{"ruleId":"201","severity":1,"message":"228","line":12,"column":8,"nodeType":"203","messageId":"204","endLine":12,"endColumn":19},{"ruleId":"201","severity":1,"message":"229","line":6,"column":8,"nodeType":"203","messageId":"204","endLine":6,"endColumn":19},{"ruleId":"206","severity":1,"message":"230","line":41,"column":6,"nodeType":"208","endLine":41,"endColumn":18,"suggestions":"231"},{"ruleId":"206","severity":1,"message":"210","line":41,"column":7,"nodeType":"211","endLine":41,"endColumn":17},{"ruleId":"212","severity":1,"message":"213","line":41,"column":12,"nodeType":"211","messageId":"214","endLine":41,"endColumn":14},{"ruleId":"201","severity":1,"message":"232","line":3,"column":42,"nodeType":"203","messageId":"204","endLine":3,"endColumn":47},{"ruleId":"206","severity":1,"message":"233","line":15,"column":6,"nodeType":"208","endLine":15,"endColumn":65,"suggestions":"234"},{"ruleId":"235","severity":1,"message":"236","line":82,"column":7,"nodeType":"237","messageId":"238","endLine":88,"endColumn":8},{"ruleId":"235","severity":1,"message":"236","line":89,"column":7,"nodeType":"237","messageId":"238","endLine":95,"endColumn":8},{"ruleId":"235","severity":1,"message":"239","line":96,"column":7,"nodeType":"237","messageId":"240","endLine":98,"endColumn":8},{"ruleId":"206","severity":1,"message":"230","line":26,"column":6,"nodeType":"208","endLine":26,"endColumn":58,"suggestions":"241"},{"ruleId":"212","severity":1,"message":"242","line":41,"column":53,"nodeType":"211","messageId":"214","endLine":41,"endColumn":55},{"ruleId":"201","severity":1,"message":"243","line":3,"column":28,"nodeType":"203","messageId":"204","endLine":3,"endColumn":31},{"ruleId":"206","severity":1,"message":"233","line":14,"column":6,"nodeType":"208","endLine":14,"endColumn":25,"suggestions":"244"},{"ruleId":"206","severity":1,"message":"233","line":15,"column":6,"nodeType":"208","endLine":15,"endColumn":43,"suggestions":"245"},{"ruleId":"206","severity":1,"message":"210","line":20,"column":7,"nodeType":"211","endLine":20,"endColumn":28},{"ruleId":"212","severity":1,"message":"213","line":20,"column":24,"nodeType":"211","messageId":"214","endLine":20,"endColumn":26},{"ruleId":"246","severity":1,"message":"247","line":11,"column":1,"nodeType":"248","endLine":32,"endColumn":3},{"ruleId":"246","severity":1,"message":"247","line":21,"column":1,"nodeType":"248","endLine":132,"endColumn":3},{"ruleId":"206","severity":1,"message":"249","line":28,"column":6,"nodeType":"208","endLine":28,"endColumn":33,"suggestions":"250"},{"ruleId":"206","severity":1,"message":"210","line":28,"column":7,"nodeType":"211","endLine":28,"endColumn":32},{"ruleId":"212","severity":1,"message":"213","line":28,"column":28,"nodeType":"211","messageId":"214","endLine":28,"endColumn":30},{"ruleId":"201","severity":1,"message":"251","line":1,"column":16,"nodeType":"203","messageId":"204","endLine":1,"endColumn":25},{"ruleId":"201","severity":1,"message":"252","line":1,"column":27,"nodeType":"203","messageId":"204","endLine":1,"endColumn":35},{"ruleId":"206","severity":1,"message":"253","line":15,"column":8,"nodeType":"208","endLine":15,"endColumn":23,"suggestions":"254"},"no-native-reassign",["255"],"no-negated-in-lhs",["256"],"no-unused-vars","'compose' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'props.auth.isAuthenticated' and 'props.history'. Either include them or remove the dependency array.","ArrayExpression",["257"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","BinaryExpression","eqeqeq","Expected '!==' and instead saw '!='.","unexpected",["258"],"'Component' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'AddProduct' is defined but never used.","'Colors' is defined but never used.","'Manufacturers' is defined but never used.","'AddDelivery' is defined but never used.","'AddCategory' is defined but never used.","'RemoteImage' is defined but never used.","React Hook useEffect has a missing dependency: 'props.match.params.id'. Either include it or remove the dependency array.",["259"],"'Table' is defined but never used.","React Hook useEffect has a missing dependency: 'updateData'. Either include it or remove the dependency array.",["260"],"no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","Expected a 'break' statement before 'default'.","default",["261"],"Expected '===' and instead saw '=='.","'Col' is defined but never used.",["262"],["263"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","React Hook useEffect has a missing dependency: 'deliveryId'. Either include it or remove the dependency array.",["264"],"'useEffect' is defined but never used.","'useState' is defined but never used.","React Hook useEffect has missing dependencies: 'orders' and 'updateData'. Either include them or remove the dependency array.",["265"],"no-global-assign","no-unsafe-negation",{"desc":"266","fix":"267"},{"desc":"266","fix":"268"},{"desc":"269","fix":"270"},{"desc":"271","fix":"272"},{"desc":"273","fix":"274"},{"desc":"275","fix":"276"},{"desc":"277","fix":"278"},{"desc":"279","fix":"280"},{"desc":"281","fix":"282"},"Update the dependencies array to be: [props.auth.isAuthenticated, props.history]",{"range":"283","text":"284"},{"range":"285","text":"284"},"Update the dependencies array to be: [props.match.params.id]",{"range":"286","text":"287"},"Update the dependencies array to be: [colors.length, manufacturers.length, subcategories.length, updateData]",{"range":"288","text":"289"},"Update the dependencies array to be: [products.length, color.length, manufacturer.length, props.match.params.id]",{"range":"290","text":"291"},"Update the dependencies array to be: [categories.length, updateData]",{"range":"292","text":"293"},"Update the dependencies array to be: [colors.length, manufacturers.length, updateData]",{"range":"294","text":"295"},"Update the dependencies array to be: [deliveryId]",{"range":"296","text":"297"},"Update the dependencies array to be: [orders, orders.length, updateData]",{"range":"298","text":"299"},[712,749],"[props.auth.isAuthenticated, props.history]",[597,634],[1465,1477],"[props.match.params.id]",[469,528],"[colors.length, manufacturers.length, subcategories.length, updateData]",[913,965],"[products.length, color.length, manufacturer.length, props.match.params.id]",[382,401],"[categories.length, updateData]",[441,478],"[colors.length, manufacturers.length, updateData]",[805,832],"[deliveryId]",[442,457],"[orders, orders.length, updateData]"]