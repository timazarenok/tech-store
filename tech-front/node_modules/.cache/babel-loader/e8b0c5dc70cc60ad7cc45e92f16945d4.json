{"ast":null,"code":"var _jsxFileName = \"/home/ghto/Desktop/Tecnnique/tech-front/src/App.js\";\nimport \"./App.css\";\nimport { setCurrentUser, logoutUser, setAuthToken } from \"./redux/actions/authActions\";\nimport jwt_decode from \"jwt-decode\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Login from \"./components/auth/login\";\nimport Header from './components/header';\nimport Main from './components/main';\nimport Register from './components/auth/register';\nimport OrderForm from './components/orders/order-form';\nimport PrivateRoute from './components/private-route';\nimport Profile from './components/profile';\nimport AdminRoute from './components/routes/admin-route';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nif (localStorage.jwtToken) {\n  // Set auth token header auth\n  const token = localStorage.jwtToken;\n  setAuthToken(token); // Decode token and get user info and exp\n\n  const decoded = jwt_decode(token); // Set user and isAuthenticated\n\n  store.dispatch(setCurrentUser(decoded)); // Check for expired token\n\n  const currentTime = Date.now() / 1000; // to get in milliseconds\n\n  if (decoded.exp < currentTime) {\n    // Logout user\n    store.dispatch(logoutUser()); // Redirect to login\n\n    window.location.href = \"./login\";\n  }\n}\n\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(Provider, {\n    store: store,\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/register\",\n        component: Register\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/login\",\n        component: Login\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/order-form\",\n        component: OrderForm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        component: Main\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(PrivateRoute, {\n          exact: true,\n          path: \"/profile\",\n          component: Profile\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AdminRoute, {\n          exact: true,\n          path: \"/admin\",\n          component: Admin\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/ghto/Desktop/Tecnnique/tech-front/src/App.js"],"names":["setCurrentUser","logoutUser","setAuthToken","jwt_decode","BrowserRouter","Router","Route","Switch","Provider","store","Login","Header","Main","Register","OrderForm","PrivateRoute","Profile","AdminRoute","localStorage","jwtToken","token","decoded","dispatch","currentTime","Date","now","exp","window","location","href","App","Admin"],"mappings":";AAAA,OAAO,WAAP;AACA,SACEA,cADF,EAEEC,UAFF,EAGEC,YAHF,QAIO,6BAJP;AAKA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,MAAzC,QAAuD,kBAAvD;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAEA,OAAO,sCAAP;AAEA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,SAAP,MAAsB,gCAAtB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,UAAP,MAAuB,iCAAvB;;;AAEA,IAAIC,YAAY,CAACC,QAAjB,EAA2B;AACzB;AACA,QAAMC,KAAK,GAAGF,YAAY,CAACC,QAA3B;AACAjB,EAAAA,YAAY,CAACkB,KAAD,CAAZ,CAHyB,CAIzB;;AACA,QAAMC,OAAO,GAAGlB,UAAU,CAACiB,KAAD,CAA1B,CALyB,CAMzB;;AACAX,EAAAA,KAAK,CAACa,QAAN,CAAetB,cAAc,CAACqB,OAAD,CAA7B,EAPyB,CAQzB;;AACA,QAAME,WAAW,GAAGC,IAAI,CAACC,GAAL,KAAa,IAAjC,CATyB,CASc;;AACvC,MAAIJ,OAAO,CAACK,GAAR,GAAcH,WAAlB,EAA+B;AAC7B;AACAd,IAAAA,KAAK,CAACa,QAAN,CAAerB,UAAU,EAAzB,EAF6B,CAG7B;;AACA0B,IAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,SAAvB;AACD;AACF;;AAED,MAAMC,GAAG,GAAG,MAAM;AAChB,sBACE,QAAC,QAAD;AAAU,IAAA,KAAK,EAAErB,KAAjB;AAAA,2BACE,QAAC,MAAD;AAAA,8BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,WAAlB;AAA8B,QAAA,SAAS,EAAEI;AAAzC;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,QAAlB;AAA2B,QAAA,SAAS,EAAEH;AAAtC;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,aAAlB;AAAgC,QAAA,SAAS,EAAEI;AAA3C;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,GAAlB;AAAsB,QAAA,SAAS,EAAEF;AAAjC;AAAA;AAAA;AAAA;AAAA,cALF,eAME,QAAC,MAAD;AAAA,gCACE,QAAC,YAAD;AAAc,UAAA,KAAK,MAAnB;AAAoB,UAAA,IAAI,EAAC,UAAzB;AAAoC,UAAA,SAAS,EAAEI;AAA/C;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,UAAD;AAAY,UAAA,KAAK,MAAjB;AAAkB,UAAA,IAAI,EAAC,QAAvB;AAAgC,UAAA,SAAS,EAAEe;AAA3C;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CAhBD;;KAAMD,G;AAkBN,eAAeA,GAAf","sourcesContent":["import \"./App.css\";\nimport {\n  setCurrentUser,\n  logoutUser,\n  setAuthToken,\n} from \"./redux/actions/authActions\";\nimport jwt_decode from \"jwt-decode\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport Login from \"./components/auth/login\";\nimport Header from './components/header'\nimport Main from './components/main'\nimport Register from './components/auth/register'\nimport OrderForm from './components/orders/order-form'\nimport PrivateRoute from './components/private-route'\nimport Profile from './components/profile'\nimport AdminRoute from './components/routes/admin-route'\n\nif (localStorage.jwtToken) {\n  // Set auth token header auth\n  const token = localStorage.jwtToken;\n  setAuthToken(token);\n  // Decode token and get user info and exp\n  const decoded = jwt_decode(token);\n  // Set user and isAuthenticated\n  store.dispatch(setCurrentUser(decoded));\n  // Check for expired token\n  const currentTime = Date.now() / 1000; // to get in milliseconds\n  if (decoded.exp < currentTime) {\n    // Logout user\n    store.dispatch(logoutUser());\n    // Redirect to login\n    window.location.href = \"./login\";\n  }\n}\n\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <Router>\n        <Header/>\n        <Route exact path='/register' component={Register} />\n        <Route exact path='/login' component={Login} />\n        <Route exact path='/order-form' component={OrderForm} />\n        <Route exact path='/' component={Main} />\n        <Switch>\n          <PrivateRoute exact path=\"/profile\" component={Profile} />\n          <AdminRoute exact path=\"/admin\" component={Admin} />\n        </Switch>\n      </Router>\n    </Provider>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}